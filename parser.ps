%!

% Stackbasierte Sprachen - WS 2010
%
% Matthias Tretter - 0726390
% Philip Messlehner - 
% Perl Thomas
%
% Limitations: Only works with one Tag per Line!!!
% Explanation: Problems with Handlung multiple SearchResults because of readline-Command

% Ein simpler XML-Parser in PostScript

% Stack-Effekt-Kommentare haben die Form
% SE funtionsname: parameter1 parameter2 parameterX -- returnwert1 returnwert2 returnwertX




% Define Procedure for handling SearchTerm
% SE analyzeSearchResult: post match pre --
% TODO: change SE: to post match pre -- tag
/analyzeSearchResult {
	pop		%pops trailing (=pre)
	pop		%pops match ('<')
	
	(>) search {
		print	% print the pre stuff = tag
		(\n) print
		flush
		pop		% pops the '>' sign
		pop		% pops rest of line (TODO: work on, to handle multiple tags per line)
	}
	{
		% No '>' found --> broken XML-File or '>' in other line --> Failure
		pop
	} ifelse
} def


/buffer 128 string def				%setup buffer for readline
currentfile buffer readline


/input (input/valid1.xml) (r) file def	%defines Inputfile


{ % start loop
	% reading one line (SE readline: input buffer -- string bool)
	input buffer readline {
		% searching for '<'	(SE search: string -- post match pre true 
	    %                            OR string -- false)
		(<) search {			
			analyzeSearchResult
		} % if-path
		{ % else-path (search)
			pop						%pops string of search command
		} ifelse
	}
	{ % else-path (readline)
		pop		%pops string for readline command
		exit	%and exits loop
	} ifelse
} loop

% close File
input closefile
