%!

% Stackbasierte Sprachen - WS 2010
%
% Matthias Tretter - 0726390
% Philip Messlehner - 
% Perl Thomas

% Ein simpler XML-Parser in PostScript

% Stack-Effekt-Kommentare haben die Form
% SE funtionsname: parameter1 parameter2 parameterX -- returnwert1 returnwert2 returnwertX

% Step 1: Handle Input
/buffer 128 string def				%setup buffer for readline
currentfile buffer readline


/input (input/valid1.xml) (r) file def	%defines Inputfile

{ % start loop
	% reading one line (SE readline: input buffer -- string bool)
	input buffer readline {
		% searching for '<'	(SE search: string -- post match pre true 
	    %                            OR string -- false)
		(<) search {			
			(Pre: ) print
			print
			(\nMatch: ) print					
			print
			(\nPost: ) print	
			print
			(\n\n) print
			flush
		} % if-path
		{ % else-path (search)
			pop						%pops string of search command
		} ifelse
	}
	{ % else-path (readline)
		pop		%pops string for readline command
		exit	%and exits loop
	} ifelse
} loop

% close File
input closefile